meta {
  name: /oauth/token
  type: http
  seq: 3
}

post {
  url: https://{{process.env.HOST}}/xapi/oauth/token
  body: formUrlEncoded
  auth: basic
}

headers {
  Content-Type: application/x-www-form-urlencoded
}

auth:basic {
  username: {{process.env.CLIENT_ID}}
  password: {{process.env.CLIENT_SECRET}}
}

body:form-urlencoded {
  grant_type: client_credentials
  ~scope: xapi:statement:read:disclosed
}

script:post-response {
  bru.setVar("access_token",res.body.access_token)
}

docs {
  Integralla LRS supports the OAuth 2.0 Client Credentials grant type, 
  providing a a way to generate and use an access token in a programmatic context which does not rely on a user interaction. Use this endpoint to generate an access token, which then be used to authenticaterequests 
  using the `Bearer Token` auth type.
  
  Integralla LRS Documentation: [https://docs.integralla.com/lrs/authentication.html](https://docs.integralla.com/lrs/authentication.html)
}
